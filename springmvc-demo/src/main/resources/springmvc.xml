<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
">

    <!--开启controller扫描-->
    <context:component-scan base-package="com.lagou.edu.controller"/>
    <!--配置springmvc组件视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--
    自动注册最合适的处理器映射器，处理器适配器
    -->
    <mvc:annotation-driven conversion-service="conversionServiceBean"/>
<!--注册自定义类型转换器-->
    <bean id="conversionServiceBean" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.lagou.edu.converter.DateConverter"></bean>
            </set>
        </property>
    </bean>

    <!--方案1：静态资源配置-->
    <!--
    配置方案原理：添加该标签之后会在SpringMVC上下文当中会定义一个DefaultServletHttpRequestHandler对象
    这个对象就如同一个检查人员，对进入DispatcherServlet请求进行过滤筛查，如果发现是一个静态资源请求那么
    会把请求转由web应用服务器（tomcat）默认的DefaultServlet来处理，如果不是静态资源请求继续由SpringMVC
    框架处理。
    -->
    <mvc:default-servlet-handler/>

    <!--静态资源配置方案2：-->
    <!--SpringMVC框架自己处理静态资源
    mapping：约定的静态资源的规则
    location：指定的静态资源的存放位置
    -->
    <mvc:resources mapping="/resources/**" location="classpath:/"/>
</beans>